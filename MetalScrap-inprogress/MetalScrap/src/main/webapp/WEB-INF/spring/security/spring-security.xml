<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd
					http://www.springframework.org/schema/mvc 
					http://www.springframework.org/schema/mvc/spring-mvc.xsd
					http://www.springframework.org/schema/beans 
					http://www.springframework.org/schema/beans/spring-beans.xsd
					http://www.springframework.org/schema/context 
					http://www.springframework.org/schema/context/spring-context.xsd
					http://www.springframework.org/schema/tx
					http://www.springframework.org/schema/tx/spring-tx.xsd">

  
  <import resource="../root-context.xml"/>
  
 <!-- This is where we configure Spring-Security  -->
 <security:http create-session="always" auto-config="false"  use-expressions="true" authentication-manager-ref="authenticationManager"    access-denied-page="/app/home?status=denied">

	   <security:session-management>
        	<security:concurrency-control max-sessions="1" />
       </security:session-management>
       <security:session-management invalid-session-url="/app/signin?status=timeout">
    		<security:concurrency-control expired-url="/app/signin?status=timeout" />
	   </security:session-management>

  <security:intercept-url pattern="/app/login" access="permitAll"/>
  
  <security:intercept-url pattern="/app/auction" access="permitAll"/>
  
  <security:intercept-url pattern="/app/home"  access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERADMIN')"/>
   <security:intercept-url pattern="/auction" access="permitAll"/>
  <security:intercept-url pattern="/app/admin/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERADMIN')"/>
  <!-- <security:intercept-url pattern="/app/admin/delivery_types" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERADMIN')"/>
  <security:intercept-url pattern="/app/admin/measure_units" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERADMIN')"/>
  <security:intercept-url pattern="/app/admin/payment_methods" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERADMIN')"/>
  <security:intercept-url pattern="/app/admin/delivery_types" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERADMIN')"/>
  <security:intercept-url pattern="/app/admin/translations" access="hasAnyRole('ROLE_SUPERADMIN')"/>
  <security:intercept-url pattern="/app/admin/users" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERADMIN')"/> -->
  
  <security:intercept-url pattern="/app/auctions/new" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERADMIN')"/>
  <security:intercept-url pattern="/app/user/*" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN', 'ROLE_SUPERADMIN')"/>
  <security:intercept-url pattern="/app/cms/*" access="hasAnyRole('ROLE_ADMIN', 'ROLE_SUPERADMIN')"/>
  
 
   
  <security:form-login 
    login-page="/app/signin" always-use-default-target="true"   authentication-success-handler-ref="savedRequestAwareHandler" authentication-failure-url="/app/signin?status=failure" />
   
  
  
 </security:http>
  
 <!-- Declare an authentication-manager to use a custom userDetailsService -->
 <security:authentication-manager alias="authenticationManager" >
        <security:authentication-provider user-service-ref="DBUserService">
            
        <security:password-encoder hash="md5"/>  
              
        </security:authentication-provider>
        
    </security:authentication-manager>
  
 
  
</beans>